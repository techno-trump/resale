---
type TMenuItem = { title: string; primary?: boolean; };
interface Props {
	className?: string;
	title: string;
	submenu?: [Array<TMenuItem>, Array<TMenuItem>];
}

const { className, submenu, title } = Astro.props;
---
{!submenu && <a href="" class="header-menu-item text-link uppercase">{title}</a>}
{submenu &&
	<div class="header-menu-item header-menu-item_dropdown">
		<a href="" class="header-menu-item__link text-link uppercase">{title}</a>
		<div class="header-menu-item__submenu header-submenu">
			<div class="container header-submenu__container">
				<div class="header-submenu__inner">
					<div class="header-submenu__header">
						<button type="button" class="btn header-submenu__back-btn"><span class="icon-small-arrow-left"></span><span class="btn__label">Назад</span></button>
						<div class="header-submenu__title">{title}</div>
					</div>
					<div class="header-submenu__body">
						<ul class="header-submenu__group">
							{submenu[0].map(item => (<li><a href="" class:list={["text-link", item.primary && "text-link_primary"]}><b>{item.title}</b></a></li>))}
						</ul>
						<ul class="header-submenu__group">
							{submenu[1].map(item => (<li><a href="" class="text-link text-link_secondary"><b>{item.title}</b></a></li>))}
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
}